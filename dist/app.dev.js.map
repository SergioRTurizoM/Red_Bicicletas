{"version":3,"sources":["app.js"],"names":["createError","require","express","path","cookieParser","logger","passport","deserializeUser","session","Token","jwt","indexRouter","usersRouter","bicicletasRouter","bicicletasAPIRouter","usuarioAPIROuter","store","MemoryStore","app","mongoose","mongoDB","connect","useNewUrlParser","Promise","global","db","connection","on","console","error","bind","set","join","__dirname","use","json","urlencoded","extended","get","req","res","render","next","post","redirect","err","locals","message","status","module","exports"],"mappings":"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","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nconst passport = require('/config/passport');\nconst deserializeUser = require ('/config/passport.js');\nconst session = require ('express-session');\nconst Token = ('jsonwebtoken')\nconst jwt = require('jsonwebtoken');\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar bicicletasRouter = require('./routes/bicicletas');\nvar bicicletasAPIRouter = require('./routes/api/bicicletas');\nvar usuarioAPIROuter = require ('./routes/api/usuarios');\n\nconst store = new session.MemoryStore; \n\nvar app = express();\n\nvar mongoose = require('mongoose');\n\nvar mongoDB = 'mongodb://localhost/red_bicicletas';\nmongoose.connect(mongoDB, { useNewUrlParser: true});\nmongoose.Promise = global.Promise;\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'MongoDB connection error: '));\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.get('/login', function (req, res) {\n  res.render('session/login');\n});\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/bicicletas', bicicletasRouter);\napp.use('/api/bicicletas', bicicletasAPIRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n\napp.post('/login', function(req, res, next) {\n  //passport\n});\n\napp.get('/logout', function(req, res, next) {\n  res.redirect('/');\n});\n\napp.get ('/forgotPassword', function(req, res) {\n\n});\n\napp.post('/forgotPassword', function(req, res){\n\n})\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"],"file":"app.dev.js"}