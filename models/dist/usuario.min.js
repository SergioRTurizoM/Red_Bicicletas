"use strict";var mongoose=require("mongoose"),uniqueValidator=require("mongoose-unique-validator"),Reserva=require("./reserva"),bcrypt=require("bcrypt"),saltRounds=10,Schema=mongoose.Schema,validateEmail=function(e){return/^(([^<>()\[\]\.,;:\s@\”]+(\.[^<>()\[\]\.,;:\s@\”]+)*)|(\”.+\”))@(([^<>()[\]\.,;:\s@\”]+\.)+[^<>()[\]\.,;:\s@\”]{2,})$/.test(e)},UsuarioSchema=new Schema({nombre:{type:String,trim:!0,required:[!0,"El nombre es obligatorio"]},email:{type:String,trim:!0,required:[!0,"El email es obligatorio"],lowercase:!0,unique:!0,validate:[validateEmail,"POr favor, ingrese un email válido"],match:[/^(([^<>()\[\]\.,;:\s@\”]+(\.[^<>()\[\]\.,;:\s@\”]+)*)|(\”.+\”))@(([^<>()[\]\.,;:\s@\”]+\.)+[^<>()[\]\.,;:\s@\”]{2,})$/]},password:{type:String,required:[!0,"El password es obligatorio"]},passwordResetToken:String,passwordResetTokenExpires:Date,verificado:{type:Boolean,default:!1}});usuarioSchema.plugin(uniqueValidator,{message:"El {PATH} ya existe con otro usuario"}),usuarioSchema.pre("save",function(e){this.isMOdified("password")&&(this.password=bcrypt.hashSync(this.password,saltRounds)),e()}),usuarioSchema.methods.validPassword=function(e){return bcrypt.compareSync(e,this.password)},usuarioSchema.methods.reservar=function(e,s,r,o){var a=new Reserva({usuario:this.id_,bicicleta:e,desde:s,hasta:r,cd:cd});console.log(a),a.save(o)},module.exports=mongoose.model("Usuario",usuarioSchema);
//# sourceMappingURL=usuario.min.js.map
