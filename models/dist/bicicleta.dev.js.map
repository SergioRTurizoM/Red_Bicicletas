{"version":3,"sources":["bicicleta.js"],"names":["mongoose","require","Schema","bicicletaSchema","code","Number","color","String","modelo","ubicacion","type","index","sparse","createInstance","ubicación","method","toString","allBicis","cb","find","add","aBici","create","findByCode","aCode","removeByCode","deleteCode","module","exports","model"],"mappings":";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAE,UAAF,CAAtB;;AACA,IAAIC,MAAM,GAAGF,QAAQ,CAACE,MAAtB;AAGA,IAAIC,eAAe,GAAG,IAAID,MAAJ,CAAY;AAC9BE,EAAAA,IAAI,EAAEC,MADwB;AAE9BC,EAAAA,KAAK,EAAEC,MAFuB;AAG9BC,EAAAA,MAAM,EAAED,MAHsB;AAI9BE,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CAACL,MAAD,CADC;AACSM,IAAAA,KAAK,EAAE;AAAED,MAAAA,IAAI,EAAE,UAAR;AAAoBE,MAAAA,MAAM,EAAE;AAA5B;AADhB;AAJmB,CAAZ,CAAtB;;AAUAT,eAAe,UAAf,CAAuBU,cAAvB,GAAwC,UAAST,IAAT,EAAeE,KAAf,EAAsBE,MAAtB,EAA8BM,SAA9B,EAAyC;AAC7E,SAAO,IAAI,IAAJ,CAAU;AACbV,IAAAA,IAAI,EAAEA,IADO;AAEbE,IAAAA,KAAK,EAAEF,IAFM;AAGbI,IAAAA,MAAM,EAAEA,MAHK;AAIbC,IAAAA,SAAS,EAAEA;AAJE,GAAV,CAAP;AAMH,CAPD;;AAUAN,eAAe,CAACY,MAAhB,CAAuBC,QAAvB,GAAkC,YAAU;AACxC,SAAO,WAAW,KAAKZ,IAAhB,GAAuB,YAAvB,GAAsC,KAAKE,KAAlD;AACH,CAFD;;AAKAH,eAAe,UAAf,CAAuBc,QAAvB,GAAkC,UAASC,EAAT,EAAa;AAC3C,SAAO,KAAKC,IAAL,CAAU,EAAV,EAAcD,EAAd,CAAP;AACH,CAFD;;AAIAf,eAAe,UAAf,CAAuBiB,GAAvB,GAA6B,UAASC,KAAT,EAAgBH,EAAhB,EAAoB;AAC7C,OAAKI,MAAL,CAAYD,KAAZ,EAAmBH,EAAnB;AACH,CAFD;;AAIAf,eAAe,UAAf,CAAuBoB,UAAvB,GAAoC,UAASC,KAAT,EAAgBN,EAAhB,EAAoB;AACpD,SAAO,KAAKK,UAAL,CAAgB;AAACnB,IAAAA,IAAI,EAAEoB;AAAP,GAAhB,EAA+BN,EAA/B,CAAP;AACH,CAFD;;AAIAf,eAAe,UAAf,CAAuBsB,YAAvB,GAAsC,UAASD,KAAT,EAAgBN,EAAhB,EAAoB;AACtD,SAAO,KAAKQ,UAAL,CAAgB;AAACtB,IAAAA,IAAI,EAAEoB;AAAP,GAAhB,EAA+BN,EAA/B,CAAP;AACH,CAFD;;AAOAS,MAAM,CAACC,OAAP,GAAiB5B,QAAQ,CAAC6B,KAAT,CAAe,WAAf,EAA4B1B,eAA5B,CAAjB","sourcesContent":["var mongoose = require ('mongoose');\nvar Schema = mongoose.Schema;\n\n\nvar bicicletaSchema = new Schema ({\n    code: Number,\n    color: String,\n    modelo: String,\n    ubicacion: {\n        type: [Number], index: { type: '2dsphere', sparse: true}\n    }\n});\n\n\nbicicletaSchema.static.createInstance = function(code, color, modelo, ubicación) {\n    return new this ({\n        code: code,\n        color: code,\n        modelo: modelo,\n        ubicacion: ubicacion\n    });\n};\n\n\nbicicletaSchema.method.toString = function(){\n    return 'code: ' + this.code + \" | color: \" + this.color;\n};\n\n\nbicicletaSchema.static.allBicis = function(cb) {\n    return this.find({}, cb);\n};\n\nbicicletaSchema.static.add = function(aBici, cb) {\n    this.create(aBici, cb);\n};\n\nbicicletaSchema.static.findByCode = function(aCode, cb) {\n    return this.findByCode({code: aCode}, cb);\n};\n\nbicicletaSchema.static.removeByCode = function(aCode, cb) {\n    return this.deleteCode({code: aCode}, cb);\n};\n\n\n\n\nmodule.exports = mongoose.model('Bicicleta', bicicletaSchema);\n\n"],"file":"bicicleta.dev.js"}